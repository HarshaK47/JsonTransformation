# -*- coding: utf-8 -*-
"""Mapping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PTb2nCJEwA4rIVe4yPojQzDtTppRYF0j
"""

import csv
import json
import sys
from types import SimpleNamespace
import pydash
import ast

import re

mapping = [[]]

print(str(sys.argv))
map_path = "D:\\Projects\\STG_India_Hackathon\\JsonTransformation\\app\\uploads\\1669318333304-mapping.csv"
with open(map_path, 'r') as f:

    reader = csv.reader(f)
    for row in reader:
        temp = []
        enum = ""
        ind = 0
        for item in row:
            ind += 1
            if(ind >= 4):
                enum += item[:-1]+","+item[-1]
            else:
                temp.append(item.lstrip())
        temp.append((enum[:-2]+enum[-1]).lstrip())
        mapping.append(temp)


# with open("D:\\Projects\\STG_India_Hackathon\\JsonTransformation\\data\\sample_1\\source.json", 'r') as f:
# with open(sys.argv[1],'r')as f
source_data = json.loads(sys.argv[1])


def compound_interest(principle, rate, time):
    Amount = principle * (pow((1 + rate / 100), time))
    CI = Amount - principle
    return round(CI, 2)


target_data = {}
for x in range(2, len(mapping)):
    map_row = mapping[x]
    source_query = map_row[2]
    enum = map_row[3]
    source_query = source_query.split("+")
    st = ""
    for query in source_query:
        query = query.lstrip()

        query_output = ""
        if 'enum' in query.lower():
            t = query[query.index('(')+1:query.index(')')]
            t = (t if t[0] != '.' else t[1:])
            t = pydash.get(source_data, t)
            enum = json.loads(enum)
            query_output = enum[t] if t != None else ""
        elif 'if' in query.lower():
            if 'item' in query.lower():
                continue
            t = query[query.index('(')+2:query.index(')')]
            t = t.lstrip().rstrip()
            data = pydash.get(source_data, t)
            # print(data,t)
            if(data != None):
                then_cond = t[t.lower().index(
                    "then")+4:t.lower().index("else")].strip()

                then_cond = then_cond[1:] if (
                    then_cond[0] == '.') else then_cond
                then_data = pydash.get(source_data, then_cond)
                if(then_data != None):
                    query_output = then_data

        else:
            t = query
            t = t.rstrip()
            t = t if (t[0] != ".") else t[1:]
            #  print(t,len(t))
            query_output = "-" if (t == '"-"') else pydash.get(source_data, t)

        if((isinstance(st, int) or st.isdigit()) and (isinstance(query_output, int) or query_output.isdigit())):
            st = int(st)+int(query_output)
        else:
            st = st+(' ' if (query_output != "-" and len(st) >= 1 and st[-1] != "-") else "")+(
                str(query_output) if query_output != None else "")

    target_query = map_row[1]

    if('item' in target_query):
        tar_obj = []

        prefix = target_query[:target_query.lower().index("item")]
        prefix = prefix[0].lower()+prefix[1:]
        obj = pydash.get(source_data, prefix[:-1])
        prefix = prefix[0].upper()+prefix[1:]
        # print(prefix[:-1],obj)
        x = -1
        for item in obj:

            x += 1
            sufix = target_query[target_query.lower().index("item")+5:]
            if 'if' in query.lower():
                st = -1
                ift = query[query.index('(')+1:query.index(')')]
                ift = ift[1:] if (ift[0] == '.') else ift
                ift = ift.lstrip().rstrip()
                ift = ift.replace("item", str(x))
                data = pydash.get(source_data, ift)
                # print("--",ift,data)

                if(data != None):
                    then_cond = query[query.lower().index(
                        "then")+4:query.lower().index("else")].strip()
                    then_cond = then_cond[1:] if (
                        then_cond[0] == '.') else then_cond
                    then_cond = then_cond.replace("item", str(x))
                    then_cond_list = then_cond.split('.')

                    new_then_cond = ''
                    b = False
                    for ite in then_cond_list:
                        new_then_cond += "."+ite
                        if(b and (bool(re.search(r'\d', ite)) == False)):
                            new_then_cond += ".0"
                            b = False

                        new_data = pydash.get(source_data, new_then_cond)
                        # print(type(new_data))
                        if(isinstance(new_data, list)):
                            b = True
                    new_then_cond = new_then_cond+(".0" if b else "")
                    then_data = pydash.get(source_data, new_then_cond)
                    # print("--",new_then_cond,then_data)
                    if(then_data != None):
                        # print("++") #do other condition also
                        st = then_data
                else:  # else part
                    st = query[query.lower().index('else')+4:].strip()
            if(sufix == 'interest'):
                st = compound_interest(float(item['princicpal']), float(
                    item['rateOfInterest']), float(item['periodInYears']))
            pydash.objects.set_(item, sufix, st)
            # print(item,sufix,st)
            tar_obj.append(item)

        obj = pydash.get(target_data, prefix[:-1])
        if(obj == None):
            obj = tar_obj
        else:
            # obj.append(tar_obj)
            obj = tar_obj
        pydash.objects.set_(target_data, prefix[:-1], obj)
    elif 'if' in query.lower():
        x = -1
        tar_obj = []
        prefix = query[query.lower().index(
            "if(")+3:query.lower().index(".item")].strip()
        prefix = prefix[0].lower()+prefix[1:]
        obj = pydash.get(source_data, prefix)
        if(obj == None):
            continue
        for item in obj:
            x += 1
            st = 0
            ift = query[query.index('(')+2:query.index(')')]
            ift = ift.lstrip().rstrip()
            ift = ift.replace("item", str(x))
            ift = ift.split(" ")[0]
            data = pydash.get(source_data, ift)
            # print("---",data,ift)
            if(data != None):
                elseInd = -1
                try:
                    query.lower().index("else")
                except:
                    elseInd = -1

                then_cond = (query[query.lower().index(
                    "then")+4:elseInd]+(query[-1] if elseInd == -1 else "")).strip()
                then_cond = then_cond[1:] if (
                    then_cond[0] == '.') else then_cond
                # print(then_cond)
                if (then_cond == "[item]" or then_cond == "item"):
                    st = x
                    tar_obj.append(item)
                    # print(tar_obj)
                then_cond = then_cond.replace("item", str(x))

                then_cond_list = then_cond.split('.')
                # print(then_cond)
                new_then_cond = ''
                b = False

                for ite in then_cond_list:
                    new_then_cond += "."+ite
                    if(b and (bool(re.search(r'\d', ite)) == False)):
                        new_then_cond += ".0"
                        b = False

                    new_data = pydash.get(source_data, new_then_cond)

                    if(isinstance(new_data, list)):
                        b = True
                new_then_cond = new_then_cond+(".0" if b else "")
                new_then_cond = new_then_cond[1:] if (
                    new_then_cond[0] == '.') else new_then_cond

                then_data = pydash.get(source_data, new_then_cond)

                if(then_data != None):
                    st = then_data
                    tar_obj.append(st)
                # print("!!!",st);
            # else:                                                                 #else part
                # tar_obj=query[query.lower().index('else')+4:].strip();
        pydash.objects.set_(target_data, target_query, tar_obj)
    else:
        # print(target_data,t,st)
        pydash.objects.set_(target_data, target_query, st)


json_object = json.dumps(target_data)
sys.stdout.write(json_object)


# if __name__ == "__main__":
#     print("asdsd0")
